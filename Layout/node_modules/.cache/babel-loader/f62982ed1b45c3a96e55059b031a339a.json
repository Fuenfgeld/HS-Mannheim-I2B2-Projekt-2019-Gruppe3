{"ast":null,"code":"import _objectWithoutProperties from \"/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/Layout/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/Layout/src/components/Chart.js\";\nimport React, { PureComponent } from \"react\";\nimport ChartExports from \"./ChartExports\";\nimport ChartInfoBox from \"./ChartInfoBox\";\n\nconst ellipsizeKeys = data => {\n  const ellipsized = {};\n  Object.keys(data).forEach(key => {\n    const string = key.toString();\n    ellipsized[key] = string.length >= 12 ? \"\".concat(string.slice(0, 10), \"...\") : string;\n  });\n  return ellipsized;\n};\n\nclass Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.svgRef = React.createRef();\n    this.state = {\n      activeKey: null,\n      ellipsized: ellipsizeKeys(props.data),\n      hovering: false\n    };\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleDeselect = this.handleDeselect.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const data = this.props.data;\n\n    if (data !== prevProps.data) {\n      this.setState({\n        ellipsized: ellipsizeKeys(data)\n      });\n    }\n  }\n\n  handleMouseEnter() {\n    this.setState({\n      hovering: true\n    });\n  }\n\n  handleMouseLeave() {\n    this.setState({\n      hovering: false\n    });\n  }\n\n  handleDeselect() {\n    this.setState({\n      activeKey: null\n    });\n  }\n\n  handleToggle(activeKey) {\n    this.setState(state => ({\n      activeKey: activeKey === state.activeKey ? null : activeKey\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          data = _this$props.data,\n          Component = _this$props.component,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"data\", \"component\"]);\n\n    const _this$state = this.state,\n          activeKey = _this$state.activeKey,\n          ellipsized = _this$state.ellipsized,\n          hovering = _this$state.hovering;\n    let classList = \"chq-charts--wrap\";\n\n    if (className) {\n      classList = \"\".concat(classList, \" \").concat(className);\n    }\n\n    return React.createElement(\"div\", {\n      className: classList,\n      onMouseEnter: this.handleMouseEnter,\n      onMouseLeave: this.handleMouseLeave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Component, Object.assign({}, props, {\n      data: data,\n      ellipsized: ellipsized,\n      activeKey: activeKey,\n      onDeselect: this.handleDeselect,\n      onToggle: this.handleToggle,\n      svgRef: this.svgRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(ChartInfoBox, {\n      data: data,\n      activeKey: activeKey,\n      onDeselect: this.handleDeselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ChartExports, {\n      data: data,\n      hovering: hovering,\n      svgRef: this.svgRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/Layout/src/components/Chart.js"],"names":["React","PureComponent","ChartExports","ChartInfoBox","ellipsizeKeys","data","ellipsized","Object","keys","forEach","key","string","toString","length","slice","Chart","constructor","props","svgRef","createRef","state","activeKey","hovering","handleMouseEnter","bind","handleMouseLeave","handleDeselect","handleToggle","componentDidUpdate","prevProps","setState","render","className","Component","component","classList"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\n\nimport ChartExports from \"./ChartExports\";\nimport ChartInfoBox from \"./ChartInfoBox\";\n\nconst ellipsizeKeys = data => {\n  const ellipsized = {};\n\n  Object.keys(data).forEach(key => {\n    const string = key.toString();\n    ellipsized[key] = string.length >= 12 ? `${string.slice(0, 10)}...` : string;\n  });\n\n  return ellipsized;\n};\n\nclass Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.svgRef = React.createRef();\n    this.state = {\n      activeKey: null,\n      ellipsized: ellipsizeKeys(props.data),\n      hovering: false\n    };\n\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n    this.handleDeselect = this.handleDeselect.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (data !== prevProps.data) {\n      this.setState({ ellipsized: ellipsizeKeys(data) });\n    }\n  }\n\n  handleMouseEnter() {\n    this.setState({ hovering: true });\n  }\n\n  handleMouseLeave() {\n    this.setState({ hovering: false });\n  }\n\n  handleDeselect() {\n    this.setState({ activeKey: null });\n  }\n\n  handleToggle(activeKey) {\n    this.setState(state => ({\n      activeKey: activeKey === state.activeKey ? null : activeKey\n    }));\n  }\n\n  render() {\n    const { className, data, component: Component, ...props } = this.props;\n    const { activeKey, ellipsized, hovering } = this.state;\n\n    let classList = \"chq-charts--wrap\";\n    if (className) {\n      classList = `${classList} ${className}`;\n    }\n\n    return (\n      <div\n        className={classList}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <Component\n          {...props}\n          data={data}\n          ellipsized={ellipsized}\n          activeKey={activeKey}\n          onDeselect={this.handleDeselect}\n          onToggle={this.handleToggle}\n          svgRef={this.svgRef}\n        />\n        <ChartInfoBox\n          data={data}\n          activeKey={activeKey}\n          onDeselect={this.handleDeselect}\n        />\n        <ChartExports\n          data={data}\n          hovering={hovering}\n          svgRef={this.svgRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}