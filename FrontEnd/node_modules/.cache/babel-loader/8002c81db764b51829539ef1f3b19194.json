{"ast":null,"code":"import React from 'react';\nimport ReactFauxDOM from 'react-faux-dom';\nimport * as d3 from 'd3';\n\nclass SVGChart extends React.Component {\n  render() {\n    let data = d3.csv(\"testdata.csv\");\n    let margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    },\n        width = this.props.width - margin.left - margin.right,\n        height = this.props.height - margin.top - margin.bottom;\n    let x = d3.scaleBand().rangeRound([0, width]);\n    let y = d3.scaleLinear().range([height, 0]);\n    let xAxis = d3.axisBottom().scale(x);\n    let yAxis = d3.axisLeft().scale(y).ticks(10, \"%\"); //Create the element\n\n    const div = new ReactFauxDOM.Element('div'); //Pass it to d3.select and proceed as normal\n\n    let svg = d3.select(div).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n    x.domain(data.map(d => d.letter));\n    y.domain([0, d3.max(data, d => d.frequency)]);\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\".concat(height, \")\")).call(xAxis);\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").text(\"Frequency\");\n    svg.selectAll(\".bar\").data(data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d.letter)).attr(\"width\", 20).attr(\"y\", d => y(d.frequency)).attr(\"height\", d => {\n      return height - y(d.frequency);\n    }); //DOM manipulations done, convert to React\n\n    return div.toReact();\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\lele\\VisualCodeWS\\front-alpha-v1.1\\src\\components\\d3BarChart.js"],"names":["React","ReactFauxDOM","d3","SVGChart","Component","render","data","csv","margin","top","right","bottom","left","width","props","height","x","scaleBand","rangeRound","y","scaleLinear","range","xAxis","axisBottom","scale","yAxis","axisLeft","ticks","div","Element","svg","select","append","attr","domain","map","d","letter","max","frequency","call","style","text","selectAll","enter","toReact"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactFauxDOM from 'react-faux-dom'\r\nimport * as d3 from 'd3'\r\n \r\nclass SVGChart extends React.Component {\r\n \r\n  render() {\r\n    let data = d3.csv(\"testdata.csv\")\r\n \r\n    let margin = {top: 20, right: 20, bottom: 30, left: 40},\r\n      width = this.props.width - margin.left - margin.right,\r\n      height = this.props.height - margin.top - margin.bottom;\r\n \r\n    let x = d3.scaleBand()\r\n      .rangeRound([0, width])\r\n \r\n    let y = d3.scaleLinear()\r\n      .range([height, 0])\r\n \r\n    let xAxis = d3.axisBottom()\r\n      .scale(x)\r\n \r\n    let yAxis = d3.axisLeft()\r\n      .scale(y)\r\n      .ticks(10, \"%\");\r\n \r\n    //Create the element\r\n    const div = new ReactFauxDOM.Element('div')\r\n     \r\n    //Pass it to d3.select and proceed as normal\r\n    let svg = d3.select(div).append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n \r\n      x.domain(data.map((d) => d.letter));\r\n      y.domain([0, d3.max(data, (d) => d.frequency)]);\r\n \r\n    svg.append(\"g\")\r\n      .attr(\"class\", \"x axis\")\r\n      .attr(\"transform\", `translate(0,${height})`)\r\n      .call(xAxis);\r\n \r\n    svg.append(\"g\")\r\n      .attr(\"class\", \"y axis\")\r\n      .call(yAxis)\r\n      .append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"y\", 6)\r\n      .attr(\"dy\", \".71em\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .text(\"Frequency\");\r\n \r\n    svg.selectAll(\".bar\")\r\n      .data(data)\r\n      .enter().append(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (d) => x(d.letter))\r\n      .attr(\"width\", 20)\r\n      .attr(\"y\", (d) => y(d.frequency))\r\n      .attr(\"height\", (d) => {return height - y(d.frequency)});\r\n \r\n    //DOM manipulations done, convert to React\r\n    return div.toReact()\r\n  }\r\n \r\n}"]},"metadata":{},"sourceType":"module"}