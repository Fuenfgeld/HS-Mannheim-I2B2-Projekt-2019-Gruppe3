{"ast":null,"code":"var _jsxFileName = \"/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/d3ia/src/components/SelectItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport class SelectItem extends Component {\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    const _this$props$select = this.props.select,\n          id = _this$props$select.id,\n          title = _this$props$select.title;\n    return React.createElement(Dropdown, {\n      id: \"Dropdown\",\n      isOpen: this.state.dropdownOpen,\n      onChange: this.props.markComplete.bind(this, id),\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"AND\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" AND \"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" OR \")));\n  }\n\n} //Proptypes\n\nSelectItem.propTypes = {\n  selection: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delSelect: PropTypes.func.isRequired\n};\nexport default SelectItem;","map":{"version":3,"sources":["/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/d3ia/src/components/SelectItem.js"],"names":["React","Component","PropTypes","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","SelectItem","toggle","setState","prevState","dropdownOpen","render","props","select","id","title","state","markComplete","bind","propTypes","selection","array","isRequired","func","delSelect"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,cAAlB,EAAkCC,YAAlC,EAAgDC,YAAhD,QAAmE,YAAnE;AAIA,OAAO,MAAMC,UAAN,SAAyBN,SAAzB,CAAkC;AAGzCO,EAAAA,MAAM,GAAG;AACL,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,MAAAA,YAAY,EAAE,CAACD,SAAS,CAACC;AADC,KAAL,CAAvB;AAGD;;AAECC,EAAAA,MAAM,GAAE;AAAA,+BACkB,KAAKC,KAAL,CAAWC,MAD7B;AAAA,UACIC,EADJ,sBACIA,EADJ;AAAA,UACQC,KADR,sBACQA,KADR;AAEJ,WACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWN,YAA3C;AAAyD,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCJ,EAAnC,CAAnE;AAA2G,MAAA,MAAM,EAAE,KAAKP,MAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAJJ,CADJ;AAYH;;AAvBoC,C,CA4BzC;;AACAD,UAAU,CAACa,SAAX,GAAqB;AACjBC,EAAAA,SAAS,EAAEnB,SAAS,CAACoB,KAAV,CAAgBC,UADV;AAEjBL,EAAAA,YAAY,EAAEhB,SAAS,CAACsB,IAAV,CAAeD,UAFZ;AAGjBE,EAAAA,SAAS,EAAEvB,SAAS,CAACsB,IAAV,CAAeD;AAHT,CAArB;AAOA,eAAehB,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\n\n\nexport class SelectItem extends Component{\n\n\ntoggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n    render(){\n        const { id, title } = this.props.select;\n        return(\n            <Dropdown id=\"Dropdown\" isOpen={this.state.dropdownOpen} onChange={this.props.markComplete.bind(this, id)} toggle={this.toggle}>\n                <DropdownToggle caret>\n                  AND\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem> AND </DropdownItem>\n                  <DropdownItem> OR </DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n\n        )\n    }\n}\n\n\n\n//Proptypes\nSelectItem.propTypes={\n    selection: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delSelect: PropTypes.func.isRequired,\n}\n\n\nexport default SelectItem"]},"metadata":{},"sourceType":"module"}