{"ast":null,"code":"var _jsxFileName = \"/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/d3ia/src/components/SelectItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport class SelectItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      if (this.props.todo.completed) {\n        return {\n          textDocoration: 'line-through'\n        };\n      } else {\n        return {\n          textDecoration: 'none'\n        };\n      }\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    const _this$props$selection = this.props.selection,\n          id = _this$props$selection.id,\n          title = _this$props$selection.title;\n    return React.createElement(Dropdown, {\n      id: \"Dropdown\",\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"AND\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" AND \"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" OR \")));\n  }\n\n} //Proptypes\n\nSelectItem.propTypes = {\n  selection: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delSelect: PropTypes.func.isRequired\n};\nexport default SelectItem;","map":{"version":3,"sources":["/Users/nebe/Documents/GitHub/HS-Mannheim-I2B2-Projekt-2019-Gruppe3/d3ia/src/components/SelectItem.js"],"names":["React","Component","PropTypes","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","SelectItem","getStyle","props","todo","completed","textDocoration","textDecoration","toggle","setState","prevState","dropdownOpen","render","selection","id","title","state","propTypes","array","isRequired","markComplete","func","delSelect"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,cAAlB,EAAkCC,YAAlC,EAAgDC,YAAhD,QAAmE,YAAnE;AAKA,OAAO,MAAMC,UAAN,SAAyBN,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAErCO,QAFqC,GAE1B,MAAK;AACZ,UAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAnB,EAA6B;AACzB,eAAM;AACFC,UAAAA,cAAc,EAAC;AADb,SAAN;AAGH,OAJD,MAIK;AACD,eAAM;AACFC,UAAAA,cAAc,EAAC;AADb,SAAN;AAGH;AACJ,KAZoC;AAAA;;AAczCC,EAAAA,MAAM,GAAG;AACL,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,MAAAA,YAAY,EAAE,CAACD,SAAS,CAACC;AADC,KAAL,CAAvB;AAGD;;AAECC,EAAAA,MAAM,GAAE;AAAA,kCACkB,KAAKT,KAAL,CAAWU,SAD7B;AAAA,UACIC,EADJ,yBACIA,EADJ;AAAA,UACQC,KADR,yBACQA,KADR;AAEJ,WACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWL,YAA3C;AAAyD,MAAA,MAAM,EAAE,KAAKH,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAJJ,CADJ;AAYH;;AAlCoC,C,CAuCzC;;AACAP,UAAU,CAACgB,SAAX,GAAqB;AACjBJ,EAAAA,SAAS,EAAEjB,SAAS,CAACsB,KAAV,CAAgBC,UADV;AAEjBC,EAAAA,YAAY,EAAExB,SAAS,CAACyB,IAAV,CAAeF,UAFZ;AAGjBG,EAAAA,SAAS,EAAE1B,SAAS,CAACyB,IAAV,CAAeF;AAHT,CAArB;AAOA,eAAelB,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\n\n\n\nexport class SelectItem extends Component{\n\n    getStyle = () =>{\n        if(this.props.todo.completed){\n            return{\n                textDocoration:'line-through'\n            }\n        }else{\n            return{\n                textDecoration:'none'\n            }\n        }\n    }\n\ntoggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n    render(){\n        const { id, title } = this.props.selection;\n        return(\n            <Dropdown id=\"Dropdown\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                  AND\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem> AND </DropdownItem>\n                  <DropdownItem> OR </DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n\n        )\n    }\n}\n\n\n\n//Proptypes\nSelectItem.propTypes={\n    selection: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delSelect: PropTypes.func.isRequired,\n}\n\n\nexport default SelectItem"]},"metadata":{},"sourceType":"module"}